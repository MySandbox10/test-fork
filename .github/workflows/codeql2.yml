name: "CodeQL Coding Standards ONLY"

on:
  pull_request:
    branches: [ "main", "master" ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  analyze:
    runs-on: ubuntu-latest-xl 
    name: Coding Standards Analysis
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Checkout CodeQL Coding Standards
      uses: actions/checkout@v4
      with:
        repository: github/codeql-coding-standards
        path: codeql-coding-standards

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: cpp

    # ------------------------------------------------------------------
    # 1- FIX: collect changed files (proper quoting + heredoc + fi)
    # ------------------------------------------------------------------
    - name: Get Changed Files
      id: changed-files
      shell: bash
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          git fetch origin "${{ github.base_ref }}"
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | \
                          grep -E '\.(c|cpp|cc|cxx|h|hpp|hxx)$' || true)
        else
          CHANGED_FILES=$(git ls-files | grep -E '\.(c|cpp|cc|cxx|h|hpp|hxx)$')
        fi

        echo "Files to analyse:"
        echo "$CHANGED_FILES"

        echo "changed_files<<EOF" >> "$GITHUB_OUTPUT"
        echo "$CHANGED_FILES"       >> "$GITHUB_OUTPUT"
        echo "EOF"                  >> "$GITHUB_OUTPUT"
    # ------------------------------------------------------------------

    - name: Locate and setup CodeQL CLI
      run: |
        CODEQL_PATH=$(find /opt/hostedtoolcache -name "codeql" -type f 2>/dev/null | head -1)
        if [ -n "$CODEQL_PATH" ]; then
          echo "Found CodeQL at: $CODEQL_PATH"
          echo "$(dirname "$CODEQL_PATH")" >> "$GITHUB_PATH"
          echo "CODEQL_CLI=$(dirname "$CODEQL_PATH")/codeql" >> "$GITHUB_ENV"
        else
          CODEQL_PATH=$(command -v codeql 2>/dev/null || find /usr -name "codeql" -type f 2>/dev/null | head -1)
          if [ -n "$CODEQL_PATH" ]; then
            echo "Found CodeQL at: $CODEQL_PATH"
            echo "CODEQL_CLI=$CODEQL_PATH" >> "$GITHUB_ENV"
          else
            echo "CodeQL CLI not found"
            exit 1
          fi
        fi

    - name: Install Coding Standards Dependencies
      run: |
        cd codeql-coding-standards/cpp/common/src   && $CODEQL_CLI pack install && cd -
        cd codeql-coding-standards/cpp/cert/src     && $CODEQL_CLI pack install && cd -
        cd codeql-coding-standards/cpp/autosar/src  && $CODEQL_CLI pack install && cd -

    - name: Create CodeQL Database
      env:
        CHANGED_FILES: ${{ steps.changed-files.outputs.changed_files }}
      run: |
        if [ -z "$CHANGED_FILES" ]; then
          echo "No C/C++ files to analyse"
          exit 0
        fi

        COMPILE_CMD=""
        for file in $CHANGED_FILES; do
          [[ -f "$file" ]] && COMPILE_CMD="$COMPILE_CMD gcc -c $file -o ${file%.*}.o;"
        done

        if [ -z "$COMPILE_CMD" ]; then
          echo "No compilable source files found"
          exit 1
        fi

        $CODEQL_CLI database create coding-standards-db --language=cpp --command="$COMPILE_CMD"

    - name: Run CERT C++ Coding Standards
      run: |
        $CODEQL_CLI database analyze coding-standards-db \
          ./codeql-coding-standards/cpp/cert/src \
          --format=sarif-latest \
          --output=cert-results.sarif \
          --sarif-category=cert-cpp

    - name: Run AUTOSAR C++ Coding Standards
      run: |
        $CODEQL_CLI database analyze coding-standards-db \
          ./codeql-coding-standards/cpp/autosar/src \
          --format=sarif-latest \
          --output=autosar-results.sarif \
          --sarif-category=autosar-cpp

    - name: Upload CERT Results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: cert-results.sarif
        category: cert-cpp

    - name: Upload AUTOSAR Results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: autosar-results.sarif
        category: autosar-cpp

    # ------------------------------------------------------------------
    # 2- FIX: script block closed, no stray shell lines afterwards
    # ------------------------------------------------------------------
    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const msg = `## CodeQL Coding Standards Analysis

          **CERT C++ Secure Coding Standards**: ✅  
          **AUTOSAR C++ Automotive Standards**: ✅  

          View results in the [Security tab](${context.payload.repository.html_url}/security/code-scanning).`;

          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo:  context.repo.repo,
            issue_number: context.issue.number,
            body: msg
          });
