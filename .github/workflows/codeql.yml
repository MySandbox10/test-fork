name: "CodeQL Coding Standards Analysis"

on:
  pull_request:
    branches: [ "main", "master" ]
  push:
    branches: [ "main", "master" ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Checkout CodeQL Coding Standards
      uses: actions/checkout@v4
      with:
        repository: github/codeql-coding-standards
        path: codeql-coding-standards

    - name: Setup CodeQL CLI
      uses: github/codeql-action/setup@v3
      
    - name: Install CodeQL pack dependencies
      run: |
        # Install dependencies for each pack
        echo "Installing common dependencies..."
        cd codeql-coding-standards/cpp/common/src && codeql pack install && cd ../../../../
        
        echo "Installing CERT dependencies..."
        cd codeql-coding-standards/cpp/cert/src && codeql pack install && cd ../../../../
        
        echo "Installing AUTOSAR dependencies..."
        cd codeql-coding-standards/cpp/autosar/src && codeql pack install && cd ../../../../
        
        # Verify pack installation
        echo "Verifying installed packs..."
        codeql pack ls

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: cpp
        # Don't specify custom queries here - we'll handle them in a custom config
        config: |
          name: "Custom CodeQL Config"
          queries:
            - name: "Built-in security and quality"
              uses: security-and-quality
          paths:
            - "src"
          paths-ignore:
            - "node_modules"
            - "**/*.js"
            - "**/*.py"

    # Build C/C++ files
    - name: Build C files
      run: |
        # Try to use make if Makefile exists, otherwise compile C files directly
        if [ -f "Makefile" ]; then
          make
        else
          # Compile all C files
          find . -name "*.c" -exec gcc -c {} \;
        fi

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:cpp"
        upload: true

    - name: Run Additional Coding Standards Analysis
      run: |
        # Find the CodeQL database location
        DB_PATH="/home/runner/work/_temp/codeql_databases/cpp"
        
        if [ -d "$DB_PATH" ]; then
          echo "Running CERT C++ coding standards analysis..."
          codeql database analyze "$DB_PATH" \
            ./codeql-coding-standards/cpp/cert/src \
            --format=sarif-latest \
            --output=cert-results.sarif \
            --sarif-add-baseline-file-info \
            --sarif-category="cert-cpp" || echo "CERT analysis completed with warnings"
            
          echo "Running AUTOSAR C++ coding standards analysis..."
          codeql database analyze "$DB_PATH" \
            ./codeql-coding-standards/cpp/autosar/src \
            --format=sarif-latest \
            --output=autosar-results.sarif \
            --sarif-add-baseline-file-info \
            --sarif-category="autosar-cpp" || echo "AUTOSAR analysis completed with warnings"
            
          # Upload additional results to GitHub
          if [ -f "cert-results.sarif" ]; then
            echo "Uploading CERT results..."
            codeql github upload-results \
              --sarif=cert-results.sarif \
              --repository="${{ github.repository }}" \
              --ref="${{ github.ref }}" \
              --commit="${{ github.sha }}" || echo "CERT upload completed"
          fi
          
          if [ -f "autosar-results.sarif" ]; then
            echo "Uploading AUTOSAR results..."
            codeql github upload-results \
              --sarif=autosar-results.sarif \
              --repository="${{ github.repository }}" \
              --ref="${{ github.ref }}" \
              --commit="${{ github.sha }}" || echo "AUTOSAR upload completed"
          fi
        else
          echo "CodeQL database not found at expected location"
        fi

    # Add step to comment on PR with results summary
    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: checks } = await github.rest.checks.listForRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.sha,
          });
          
          const codeqlCheck = checks.check_runs.find(check => 
            check.name.includes('CodeQL') || check.name.includes('analyze')
          );
          
          if (codeqlCheck) {
            const message = "## CodeQL Coding Standards Analysis\n\n" +
              "**Status**: " + (codeqlCheck.conclusion || 'In Progress') + "\n" +
              "**Language**: C/C++\n\n" +
              "View detailed results in the [Security tab](" + context.payload.repository.html_url + "/security/code-scanning).";
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
          }
