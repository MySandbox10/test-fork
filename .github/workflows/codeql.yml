name: "CodeQL C/C++ Coding Standards"

on:
  pull_request:
    branches: [ "main", "master" ]
  push:
    branches: [ "main", "master" ]

jobs:
  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Checkout CodeQL Coding Standards
      uses: actions/checkout@v4
      with:
        repository: github/codeql-coding-standards
        path: codeql-coding-standards

    - name: Setup CodeQL CLI
      uses: github/codeql-action/setup@v3

    - name: Install Coding Standards Dependencies
      run: |
        cd codeql-coding-standards/cpp/common/src && codeql pack install && cd ../../../../
        cd codeql-coding-standards/cpp/cert/src && codeql pack install && cd ../../../../
        cd codeql-coding-standards/cpp/autosar/src && codeql pack install && cd ../../../../

    - name: Create CodeQL Database
      run: |
        if [ -f "Makefile" ]; then
          codeql database create codeql-db --language=cpp --command="make"
        else
          codeql database create codeql-db --language=cpp --command="find . -name '*.c' -exec gcc -c {} \;"
        fi

    - name: Run Built-in Security Analysis
      run: |
        codeql database analyze codeql-db \
          codeql/cpp-queries:codeql-suites/cpp-security-and-quality.qls \
          --format=sarif-latest \
          --output=builtin-results.sarif

    - name: Run CERT C++ Analysis
      run: |
        codeql database analyze codeql-db \
          ./codeql-coding-standards/cpp/cert/src \
          --format=sarif-latest \
          --output=cert-results.sarif \
          --sarif-category=cert-cpp

    - name: Run AUTOSAR Analysis
      run: |
        codeql database analyze codeql-db \
          ./codeql-coding-standards/cpp/autosar/src \
          --format=sarif-latest \
          --output=autosar-results.sarif \
          --sarif-category=autosar-cpp

    - name: Upload Results
      run: |
        # Upload built-in analysis
        codeql github upload-results \
          --sarif=builtin-results.sarif \
          --repository="${{ github.repository }}" \
          --ref="${{ github.ref }}" \
          --commit="${{ github.sha }}"

        # Upload CERT analysis
        codeql github upload-results \
          --sarif=cert-results.sarif \
          --repository="${{ github.repository }}" \
          --ref="${{ github.ref }}" \
          --commit="${{ github.sha }}"

        # Upload AUTOSAR analysis
        codeql github upload-results \
          --sarif=autosar-results.sarif \
          --repository="${{ github.repository }}" \
          --ref="${{ github.ref }}" \
          --commit="${{ github.sha }}"

    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const message = "## CodeQL C/C++ Analysis Complete\n\n" +
            "**Standards Applied**:\n" +
            "- Built-in Security & Quality\n" +
            "- CERT C++ Secure Coding\n" +
            "- AUTOSAR C++ (Automotive)\n\n" +
            "View results in the [Security tab](" + context.payload.repository.html_url + "/security/code-scanning).";
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });
